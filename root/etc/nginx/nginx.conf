events {
    worker_connections 1024;
}

http {
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    include /etc/nginx/mime.types;

    gzip on;
    gzip_comp_level 2;
    gzip_http_version 1.0;
    gzip_proxied any;
    gzip_min_length 10240;
    gzip_buffers 16 8k;
    gzip_types text/plain text/css application/x-javascript text/xml application/xml application/xml+rss application/javascript image/jpg image/png image/gif;
    gzip_disable "msie6";

    upstream smda {
        #server unix:///opt/smda/smda.sock;
        server 127.0.0.1:8000;
    }

    server {
        listen 80 default_server;
        return 301 https://$http_host$request_uri;
    }

    server {
        listen 443 ssl;
        ssl_certificate /etc/pki/wcssl/test.smda.crt;
        ssl_certificate_key /etc/pki/wcssl/test.smda.key;
        #ssl_password_file /etc/keys/fifo;
        location / {
            return 301 https://$http_host/smda$uri;
        }
        # smda web server
        location /smda/ {
            #include uwsgi_params;
            #uwsgi_pass smda;
            #uwsgi_param SCRIPT_NAME /smda;
            #uwsgi_modifier1 30;
            proxy_pass http://smda/;
        }
        # static files
        # expires max = Cache-Control: 10 years Expires: "Thu, 31 Dec 2037 23:55:55 GMT"
        # expires -1 = Cache-Control: no-cache
        location /smda/img {
            expires max;
            alias /srv/smda/img;
        }
        location /smda/css {
            expires max;
            alias /srv/smda/css;
        }
        location /smda/js {
            expires max;
            alias /srv/smda/js;
        }
        location /smda/fonts {
            expires max;
            alias /srv/smda/fonts;
        }
        location /smda/html {
            expires -1;
            alias /srv/smda/html;
        }
        location /smda/atlasimg {
            internal;
            expires 1M;
            access_log off;
            add_header Cache-Control "public";
            alias /media/sf_smda/;
            default_type "image/png";
            try_files $uri $uri.png $uri.jpg $uri.jpeg =404;
        }
    }
}
